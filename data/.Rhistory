q()
fread(http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt)
lrn14 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
structure(lrn14)
dim(lrn14)
View(lrn14)
the dimensions of the data
dim(lrn14)
# look at the structure of the data
str(lrn14)
# select the columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(lrn14, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
# select the columns related to surface learning and create column 'surf' by averaging
surface_columns <- select(lrn14, one_of(surface_questions))
lrn14$surf <- rowMeans(surface_columns)
# select the columns related to strategic learning and create column 'stra' by averaging
strategic_columns <- select(lrn14, one_of(strategic_questions))
lrn14$stra <- rowMeans(strategic_columns)
library(dplyr)
install.packages(dplyr)
.libPaths()
install.packages(dplyr)
install(dplyr)
probabilities <- predict(m, type = "response")
library(dplyr)
alc <- read.csv("data/alc.csv")
library(tidyr); library(dplyr); library(ggplot2)
variables <- c("high_use","failures","studytime","health","famsup", "absences")
alc_hyp <- select(alc, one_of(variables))
library(gridExtra)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc_hyp$high_use, prob = alc_hyp$probability)
library(MASS)
data("Boston")
library(tidyr)
install.packages("tidyverse")
install.packages("corrplot")
library(MASS)
library(tidyverse)
library(corrplot)
data("Boston")
colnames(Boston)
test <- dplyr::select(test, -crime)
?scaled
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
str(gii)
dim(hd)
dim(gii)
summary(hd)
summary(gii)
Meta file
cname(3)
colnames(hd)
new_names <- c("HDI.Ranks" = "Rank", "Country" = "Country", "Human.Development.Index..HDI" = "HDI", "Expected.Years.of.Education" = "eyearsedu", "Gross.National.Income..GNI..per.Capita" = "GNI", "GNI.per.Capita.Rank.Minus.HDI.Rank" = "GNImHDI" )
rename(hd, new_names)
library(plyr)
rename(hd, new_names)
colnames(hd)
rename(hd, c("HDI.Ranks" ="Rank"))
rename(hd, c("HDI.Rank" ="Rank"))
rename(hd, new_names)
colnames(hd)
rename(hd, new_names)
rename(hd, c("HDI.Rank" = "Rank")
colnames(hd)
rename(hd, c("HDI.Rank" = "Rank"))
colnames(hd)
colnames(hd)
rename(hd, c("HDI.Rank" = "Rank"))
View(hd)
View(hd)
new_names <- c("Rank", "Country", "HDI", "eyearsedu",  "GNI", "GNImHDI" )
colnames(hd) <-new_names
colnames(hd)
View(hd)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
View(hd)
new_names <- c("Rank", "Country", "HDI", "eyearsedu", "expectedEDU", "meanEDU"  "GNI", "GNImHDI" )
library(plyr)
new_names <- c("Rank", "Country", "HDI", "eyearsedu", "expectedEDU", "meanEDU" , "GNI", "GNImHDI" )
colnames(hd) <-new_names
colnames(hd)
View(gii)
View(gii)
new_gii <- c("Rank", "Country", "GII", "materMort", "adBirth", "reprParl", "secEdF", "secEdM", "labourF", "labourM")
new_hd <- c("Rank", "Country", "HDI", "eYearsEdu", "expectedEDU", "meanEDU" , "GNI", "GNImHDI" )
colnames(hd) <-new_hd
colnames(gii) <-new_gii
colnames(hd)
colnames(gii)
library(dplyr); library(ggplot2)
gii <- mutate(gii, ratioFM = (secEdF / secEdM))
gii <- mutate(gii, ratioFM = (labourF / labourM))
colnames(gii)
gii <- mutate(gii, eduFM = (secEdF / secEdM))
gii <- mutate(gii, labourFM = (labourF / labourM))
colnames(gii)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
str(gii)
dim(hd)
dim(gii)
summary(hd)
summary(gii)
colnames(hd)
#named them with my own names
new_hd <- c("Rank", "Country", "HDI", "eYearsEdu", "expectedEDU", "meanEDU" , "GNI", "GNImHDI" )
new_gii <- c("Rank", "Country", "GII", "materMort", "adBirth", "reprParl", "secEdF", "secEdM", "labourF", "labourM")
colnames(hd) <-new_hd
colnames(gii) <-new_gii
colnames(hd)
colnames(gii)
library(dplyr); library(ggplot2)
gii <- mutate(gii, eduFM = (secEdF / secEdM))
gii <- mutate(gii, labourFM = (labourF / labourM))
colnames(gii)
?inner_join
human <- inner_join(hd, gii, by = c("Country"), suffix = c(".hd", ".gii"))
colnames(human)
str(human)
dim(human)
?write.csv
write.csv(human, file="human")
write.csv(human, file="human.csv", row.names= FALSE)
write.csv(human, file="human.csv", row.names= FALSE)
setwd("~/GitHub/IODS-project/data")
write.csv(human, file="human.csv", row.names= FALSE)
